name: Run Tests

on:
  push:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        go-version: ['1.24']
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules (Unix)
      if: runner.os != 'Windows'
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
    
    - name: Cache Go modules (Windows)
      if: runner.os == 'Windows'
      uses: actions/cache@v4
      with:
        path: |
          ~\AppData\Local\go-build
          ~\go\pkg\mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run tests with race detection
      run: go test -race -v ./...

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Build for multiple platforms
      run: |
        mkdir -p build
        
        # Build for Linux (amd64)
        GOOS=linux GOARCH=amd64 go build -o build/battleships-linux-amd64 ./main.go
        
        # Build for Windows (amd64)
        GOOS=windows GOARCH=amd64 go build -o build/battleships-windows-amd64.exe ./main.go
        
        # Build for macOS (amd64)
        GOOS=darwin GOARCH=amd64 go build -o build/battleships-darwin-amd64 ./main.go
        
        # Build for macOS (arm64 - Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -o build/battleships-darwin-arm64 ./main.go
        
        # Build for Linux (arm64)
        GOOS=linux GOARCH=arm64 go build -o build/battleships-linux-arm64 ./main.go
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: battleships-binaries
        path: build/
        retention-days: 30
